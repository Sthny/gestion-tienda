// Generated by view binder compiler. Do not edit!
package com.example.gestiontienda.databinding;

import android.view.LayoutInflater;
import android.view.View;
import android.view.ViewGroup;
import android.widget.ImageView;
import android.widget.TextView;
import androidx.annotation.NonNull;
import androidx.annotation.Nullable;
import androidx.cardview.widget.CardView;
import androidx.viewbinding.ViewBinding;
import androidx.viewbinding.ViewBindings;
import com.example.gestiontienda.R;
import java.lang.NullPointerException;
import java.lang.Override;
import java.lang.String;

public final class ViewProveedorSingleBinding implements ViewBinding {
  @NonNull
  private final CardView rootView;

  @NonNull
  public final ImageView bEdiProv;

  @NonNull
  public final ImageView bEliProv;

  @NonNull
  public final TextView cif;

  @NonNull
  public final TextView mail;

  @NonNull
  public final TextView name;

  @NonNull
  public final TextView textView1;

  @NonNull
  public final TextView textView2;

  @NonNull
  public final TextView textView7;

  private ViewProveedorSingleBinding(@NonNull CardView rootView, @NonNull ImageView bEdiProv,
      @NonNull ImageView bEliProv, @NonNull TextView cif, @NonNull TextView mail,
      @NonNull TextView name, @NonNull TextView textView1, @NonNull TextView textView2,
      @NonNull TextView textView7) {
    this.rootView = rootView;
    this.bEdiProv = bEdiProv;
    this.bEliProv = bEliProv;
    this.cif = cif;
    this.mail = mail;
    this.name = name;
    this.textView1 = textView1;
    this.textView2 = textView2;
    this.textView7 = textView7;
  }

  @Override
  @NonNull
  public CardView getRoot() {
    return rootView;
  }

  @NonNull
  public static ViewProveedorSingleBinding inflate(@NonNull LayoutInflater inflater) {
    return inflate(inflater, null, false);
  }

  @NonNull
  public static ViewProveedorSingleBinding inflate(@NonNull LayoutInflater inflater,
      @Nullable ViewGroup parent, boolean attachToParent) {
    View root = inflater.inflate(R.layout.view_proveedor_single, parent, false);
    if (attachToParent) {
      parent.addView(root);
    }
    return bind(root);
  }

  @NonNull
  public static ViewProveedorSingleBinding bind(@NonNull View rootView) {
    // The body of this method is generated in a way you would not otherwise write.
    // This is done to optimize the compiled bytecode for size and performance.
    int id;
    missingId: {
      id = R.id.b_edi_Prov;
      ImageView bEdiProv = ViewBindings.findChildViewById(rootView, id);
      if (bEdiProv == null) {
        break missingId;
      }

      id = R.id.b_eli_Prov;
      ImageView bEliProv = ViewBindings.findChildViewById(rootView, id);
      if (bEliProv == null) {
        break missingId;
      }

      id = R.id.cif;
      TextView cif = ViewBindings.findChildViewById(rootView, id);
      if (cif == null) {
        break missingId;
      }

      id = R.id.mail;
      TextView mail = ViewBindings.findChildViewById(rootView, id);
      if (mail == null) {
        break missingId;
      }

      id = R.id.name;
      TextView name = ViewBindings.findChildViewById(rootView, id);
      if (name == null) {
        break missingId;
      }

      id = R.id.textView1;
      TextView textView1 = ViewBindings.findChildViewById(rootView, id);
      if (textView1 == null) {
        break missingId;
      }

      id = R.id.textView2;
      TextView textView2 = ViewBindings.findChildViewById(rootView, id);
      if (textView2 == null) {
        break missingId;
      }

      id = R.id.textView7;
      TextView textView7 = ViewBindings.findChildViewById(rootView, id);
      if (textView7 == null) {
        break missingId;
      }

      return new ViewProveedorSingleBinding((CardView) rootView, bEdiProv, bEliProv, cif, mail,
          name, textView1, textView2, textView7);
    }
    String missingId = rootView.getResources().getResourceName(id);
    throw new NullPointerException("Missing required view with ID: ".concat(missingId));
  }
}
