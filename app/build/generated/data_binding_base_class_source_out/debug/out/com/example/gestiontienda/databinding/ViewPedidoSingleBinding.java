// Generated by view binder compiler. Do not edit!
package com.example.gestiontienda.databinding;

import android.view.LayoutInflater;
import android.view.View;
import android.view.ViewGroup;
import android.widget.ImageView;
import android.widget.TextView;
import androidx.annotation.NonNull;
import androidx.annotation.Nullable;
import androidx.cardview.widget.CardView;
import androidx.viewbinding.ViewBinding;
import androidx.viewbinding.ViewBindings;
import com.example.gestiontienda.R;
import java.lang.NullPointerException;
import java.lang.Override;
import java.lang.String;

public final class ViewPedidoSingleBinding implements ViewBinding {
  @NonNull
  private final CardView rootView;

  @NonNull
  public final ImageView bEdiPe;

  @NonNull
  public final ImageView bEliPro;

  @NonNull
  public final TextView can;

  @NonNull
  public final TextView fe;

  @NonNull
  public final TextView np;

  @NonNull
  public final TextView produ;

  private ViewPedidoSingleBinding(@NonNull CardView rootView, @NonNull ImageView bEdiPe,
      @NonNull ImageView bEliPro, @NonNull TextView can, @NonNull TextView fe, @NonNull TextView np,
      @NonNull TextView produ) {
    this.rootView = rootView;
    this.bEdiPe = bEdiPe;
    this.bEliPro = bEliPro;
    this.can = can;
    this.fe = fe;
    this.np = np;
    this.produ = produ;
  }

  @Override
  @NonNull
  public CardView getRoot() {
    return rootView;
  }

  @NonNull
  public static ViewPedidoSingleBinding inflate(@NonNull LayoutInflater inflater) {
    return inflate(inflater, null, false);
  }

  @NonNull
  public static ViewPedidoSingleBinding inflate(@NonNull LayoutInflater inflater,
      @Nullable ViewGroup parent, boolean attachToParent) {
    View root = inflater.inflate(R.layout.view_pedido_single, parent, false);
    if (attachToParent) {
      parent.addView(root);
    }
    return bind(root);
  }

  @NonNull
  public static ViewPedidoSingleBinding bind(@NonNull View rootView) {
    // The body of this method is generated in a way you would not otherwise write.
    // This is done to optimize the compiled bytecode for size and performance.
    int id;
    missingId: {
      id = R.id.b_edi_Pe;
      ImageView bEdiPe = ViewBindings.findChildViewById(rootView, id);
      if (bEdiPe == null) {
        break missingId;
      }

      id = R.id.b_eli_pro;
      ImageView bEliPro = ViewBindings.findChildViewById(rootView, id);
      if (bEliPro == null) {
        break missingId;
      }

      id = R.id.can;
      TextView can = ViewBindings.findChildViewById(rootView, id);
      if (can == null) {
        break missingId;
      }

      id = R.id.fe;
      TextView fe = ViewBindings.findChildViewById(rootView, id);
      if (fe == null) {
        break missingId;
      }

      id = R.id.np;
      TextView np = ViewBindings.findChildViewById(rootView, id);
      if (np == null) {
        break missingId;
      }

      id = R.id.produ;
      TextView produ = ViewBindings.findChildViewById(rootView, id);
      if (produ == null) {
        break missingId;
      }

      return new ViewPedidoSingleBinding((CardView) rootView, bEdiPe, bEliPro, can, fe, np, produ);
    }
    String missingId = rootView.getResources().getResourceName(id);
    throw new NullPointerException("Missing required view with ID: ".concat(missingId));
  }
}
